---
- name: Add apt key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg
  become: true

- name: Add repository
  apt_repository:
    repo: deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
  become: true

- name: Install dependencies
  apt:
    name:
      - kubeadm
      - kubelet
      - kubectl
      - containerd
    state: latest
    update_cache: true
  become: true

- name: Set containerd config
  copy:
    dest: /etc/containerd/config.toml
    content: disabled_plugins = []
  become: true

- name: Restart containerd
  systemd:
    name: containerd
    state: restarted
  become: true

- name: Get kube master node name
  set_fact:
    kube_master_nodename: "{{ item if hostvars[item]['kube_master'] is defined and hostvars[item]['kube_master'] else kube_master_nodename }}"
  loop: "{{ groups['servers'] }}"
  run_once: true
  delegate_to: localhost

- name: Get kube master IP
  set_fact:
    kube_master_ip: "{{ hostvars[kube_master_nodename]['ip'] }}"
  run_once: true
  delegate_to: localhost

- name: Kubernetes master
  include_tasks: master.yaml
  when: kube_master is defined and kube_master

- name: Get kube join cmd from kube master
  set_fact:
    kube_join_cmd: "{{ hostvars[kube_master_nodename]['kube_join_cmd'] }}"
  run_once: true
  delegate_to: localhost

- name: Kubernetes node
  include_tasks: node.yaml
  when: kube_node is defined and kube_node

- name: Ensure kube config directory exists
  file:
    path: "{{ kube_remote_dir }}"
    state: directory

- name: Copy kube config to all nodes
  copy:
    src: "{{ kube_local_path }}"
    dest:  "{{ kube_remote_path }}"
  when: (kube_master is defined and kube_master) or (kube_node is defined and kube_node)
